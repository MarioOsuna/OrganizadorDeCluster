package programacluster;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URL;
import java.nio.channels.SeekableByteChannel;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.nio.file.StandardOpenOption;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.formula.functions.Replace;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Usuario
 */
public class Main extends javax.swing.JFrame {

    String[] ArchivosPDF;
    String[] archivosCL;
    String[] archivosCLE;
    String[] archivos61;
    String[] VerbCLE;
    String[] VerbCL;
    String[] Verb61;
    String ArchivoExcel;
    String NCluster;
    int NUM;
    int contadorCL = 0;
    int contadorCLE = 0;
    int contador61 = 0;
    String VERBAL = "_PERF-1-VR";
    String NOVERBAL = "_PERF-1";
    boolean PDFIniciado, EXCELIniciado = false;
    boolean FicheroEscogido = false;
    JFileChooser fileChooser = new JFileChooser();
    String RUTASEGUIMIENTO;
    String RUTA_EXTRAER;
    String carpeta = "0";

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.setLocation(450, 250);
        this.setSize(350, 300);
        this.setResizable(false);
        this.setTitle("Organizador de clusters");
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButtonEXTRAER = new javax.swing.JButton();
        jButtonPDF = new javax.swing.JButton();
        jButtonEXCEL = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCluster = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jCheckBoxSeguimiento = new javax.swing.JCheckBox();
        jRadioButtonY = new javax.swing.JRadioButton();
        jRadioButtonZ = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("CARGANDO...");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(543, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel8)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 300));

        jButtonEXTRAER.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButtonEXTRAER.setText("EXTRAER");
        jButtonEXTRAER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEXTRAERActionPerformed(evt);
            }
        });

        jButtonPDF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonPDF.setText("PERMISOS");
        jButtonPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPDFActionPerformed(evt);
            }
        });

        jButtonEXCEL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonEXCEL.setText("EXCEL");
        jButtonEXCEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEXCELActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Cluster:");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/3.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/4.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo1.png"))); // NOI18N

        jCheckBoxSeguimiento.setText("Mismo seguimiento");
        jCheckBoxSeguimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSeguimientoActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonY);
        jRadioButtonY.setText("Y");

        buttonGroup2.add(jRadioButtonZ);
        jRadioButtonZ.setSelected(true);
        jRadioButtonZ.setText("Z");

        jLabel7.setText("Columna verbal");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPDF)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEXCEL, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonZ)
                                    .addComponent(jRadioButtonY))))
                        .addGap(87, 87, 87))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jCheckBoxSeguimiento)
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonEXTRAER, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(99, 99, 99))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonPDF)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonEXCEL)
                        .addComponent(jLabel4)))
                .addGap(26, 26, 26)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldCluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jRadioButtonY)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxSeguimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonZ))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 36, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jButtonEXTRAER))
                        .addGap(43, 43, 43))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Boton para seleccionar ficheros pdf
    private void jButtonPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPDFActionPerformed
        JFileChooser fc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Archivos pdf (*.pdf)", "pdf");
        fc.setFileFilter(filtro);

        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (!fc.isMultiSelectionEnabled()) {
            fc.setMultiSelectionEnabled(true);
        }
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            File[] files = fc.getSelectedFiles();
            NUM = files.length;
            ArchivosPDF = new String[files.length];
            // System.out.println("ARCHIVOS PDF");
            for (int i = 0; i < files.length; i++) {
                // jTextArea1.append(files[i].getName() + "\n");

                //Almacena en un array la ruta de los ficheros pdf
                ArchivosPDF[i] = files[i].getAbsolutePath();
                // System.out.println(files[i].getAbsolutePath() + "\n");

            }
            PDFIniciado = true;

        }
    }//GEN-LAST:event_jButtonPDFActionPerformed

    public void buscarEnExcel(XSSFSheet sheet) throws IOException {
        NCluster = jTextFieldCluster.getText();
        /* XSSFWorkbook wb = new XSSFWorkbook(new FileInputStream(RUTASEGUIMIENTO));

         XSSFSheet sheet = wb.getSheetAt(0);*/

        int rows = sheet.getLastRowNum();
        //Declaramos el tamaño de los arrays con las filas totales que conforman la hoja excel
        archivosCL = new String[rows];
        archivosCLE = new String[rows];
        archivos61 = new String[rows];

        VerbCL = new String[rows];
        VerbCLE = new String[rows];
        Verb61 = new String[rows];

        for (int i = 1; i < rows; ++i) {
            XSSFRow row = sheet.getRow(i);

            //Seleccionamos las columnas que nos interessan A,D e Y
            XSSFCell ACell = row.getCell(0);
            XSSFCell DCell = row.getCell(3);
            XSSFCell YCell;

            if (jRadioButtonY.isSelected()) {
                YCell = row.getCell(24);

            } else {
                YCell = row.getCell(25);

            }

            String ColumnaA = ACell.toString();
            String ColumnaD = DCell.toString();
            String ColumnaY = "";
            if (YCell == null || YCell.getCellType() == Cell.CELL_TYPE_BLANK) {

            } else {

                ColumnaY = YCell.toString() + " ";
            }

            try {
                 String part;
                 String tipo;
                if(ColumnaD.equals("0.0")){
                    part="0";
                    tipo="CL";
                }else{
                     String[] parts = ColumnaD.split("-");

                 part = parts[3];
                 tipo = parts[4];
                }
               
                if (!ColumnaY.equals("")) {
                    if (part.contains("0" + NCluster) || part.contains("00" + NCluster)||part.equals(NCluster)) {
                        //  System.out.println("Coincidencia");

                        if (tipo.contains("CL")) {
                            archivosCL[contadorCL] = ColumnaA;
                            //System.out.println("ColumnaY " + ColumnaY);
                            //  System.out.println("Guardando... :" + archivosCL[contadorCL]);
                            if (ColumnaY.contains("SI")) {
                                //System.out.println("SI");
                                VerbCL[contadorCL] = "SI";
                            } else {
                                // System.out.println("NO");
                                VerbCL[contadorCL] = "NO";
                            }
                            contadorCL++;

                        } else {
                            if (tipo.contains("CLE")) {
                                archivosCLE[contadorCLE] = ColumnaA;

                                if (ColumnaY.contains("SI")) {
                                    VerbCLE[contadorCLE] = "SI";
                                } else {
                                    VerbCLE[contadorCLE] = "NO";
                                }
                                contadorCLE++;

                            } else {
                                if (tipo.contains("61")) {
                                    archivos61[contador61] = ColumnaA;

                                    if (ColumnaY.contains("SI")) {
                                        Verb61[contador61] = "SI";
                                    } else {
                                        Verb61[contador61] = "NO";
                                    }
                                    contador61++;
                                }
                            }
                        }

                    }
                }
            } catch (Exception e) {
                
            }

        }
    }
//Boton para seleccionar excel y leerlo buscando en el los cluster con el número indicado
    private void jButtonEXCELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEXCELActionPerformed

        //Almacenamos en variable local el número de cluster introducido
        if (!jTextFieldCluster.getText().toString().equals("") && isNumeric(jTextFieldCluster.getText().toString())) {

            //  if (!FicheroEscogido) {
            NCluster = jTextFieldCluster.getText();
            frame();

            Scanner entrada = null;

            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo Excel (*.xlsx,*.xls)", "xlsx", "xls");
            fileChooser.addChoosableFileFilter(filter);
            fileChooser.setFileFilter(filter);

            fileChooser.showOpenDialog(fileChooser);
            //FicheroEscogido = true;
            try {

                String ruta = fileChooser.getSelectedFile().getAbsolutePath();
                RUTASEGUIMIENTO = ruta;
                XSSFWorkbook wb = new XSSFWorkbook(new FileInputStream(ruta));
                XSSFSheet sheet = wb.getSheetAt(0);
                buscarEnExcel(sheet);
               
                EXCELIniciado = true;
                jFrame1.setVisible(false);
                //System.out.println("Permisos del cluster: " + NCluster);

            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error, revise el fichero de log en la carpeta donde instaló el programa", "Error", JOptionPane.WARNING_MESSAGE);

                jFrame1.setVisible(false);
                System.out.println(e.getMessage());
            } catch (NullPointerException e) {
                // JOptionPane.showMessageDialog(null, "Ha ocurrido un error, revise el fichero de log en la carpeta donde instaló el programa", "Error", JOptionPane.WARNING_MESSAGE);

                jFrame1.setVisible(false);
                System.out.println("No se ha seleccionado ningún fichero");
                e.printStackTrace();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error, revise el fichero de log en la carpeta donde instaló el programa", "Error", JOptionPane.WARNING_MESSAGE);

                jFrame1.setVisible(false);
                System.out.println(e.getMessage());
                e.printStackTrace();

            } finally {
                if (entrada != null) {
                    entrada.close();
                }
            }
           
        } else {
            JOptionPane.showMessageDialog(null, " Debe introducir el cluster con un número", "Error", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_jButtonEXCELActionPerformed

    private void jButtonEXTRAERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEXTRAERActionPerformed

        if (jCheckBoxSeguimiento.isSelected()) {
            try {
                //jButtonEXCELActionPerformed(evt);
                XSSFWorkbook wb = new XSSFWorkbook(new FileInputStream(RUTASEGUIMIENTO));
                XSSFSheet sheet = wb.getSheetAt(0);
                buscarEnExcel(sheet);
                extraer();
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            EXCELIniciado = false;

        } else {

            if (!PDFIniciado || !EXCELIniciado) {
                //  JOptionPane.showMessageDialog(null, "Debe seguir los pasos del 1 al 4 antes de extraer");
                JOptionPane.showMessageDialog(null, "Debe seguir los pasos del 1 al 4 antes de extraer", "Error", JOptionPane.WARNING_MESSAGE);

            } else {

                extraer();
            }
        }
    }//GEN-LAST:event_jButtonEXTRAERActionPerformed

    private void jCheckBoxSeguimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSeguimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSeguimientoActionPerformed

    public void extraer() {
        /*if (" ".equals(RUTA_EXTRAER)) {
         JFileChooser fileChooser = new JFileChooser();

         } else {*/
        JFileChooser fileChooser = new JFileChooser(RUTA_EXTRAER);

        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.showOpenDialog(fileChooser);

        String rutaCarpeta = fileChooser.getSelectedFile().getAbsolutePath();
        RUTA_EXTRAER = rutaCarpeta;
        if (Integer.parseInt(NCluster) < 10) {
            carpeta = "00";
        } else {
            carpeta = "0";

        }

        if (contadorCL > 0) {
            // System.out.println("EXTRAER:");

            File directorio = new File(rutaCarpeta + "\\" + "CL" + carpeta + NCluster);

            extraer(directorio, rutaCarpeta, ArchivosPDF, contadorCL, VerbCL, archivosCL);
        }
        if (contador61 > 0) {

            File directorio = new File(rutaCarpeta + "\\" + "CL" + carpeta + NCluster);
            extraer(directorio, rutaCarpeta, ArchivosPDF, contador61, Verb61, archivos61);
        }
        if (contadorCLE > 0) {

            File directorio = new File(rutaCarpeta + "\\" + "CL" + carpeta + NCluster);
            extraer(directorio, rutaCarpeta, ArchivosPDF, contadorCLE, VerbCLE, archivosCLE);
        }
        if (contadorCL == 0 && contador61 == 0 && contadorCLE == 0) {
            JOptionPane.showMessageDialog(null, "No se han encontrado permisos pertenencientes al cluster " + NCluster);

        } else {
            JOptionPane.showMessageDialog(null, "Ya han sido organizados los permisos del cluster " + NCluster + " en la ruta: " + rutaCarpeta);

        }
        /*  PDFIniciado = false;
         EXCELIniciado = false;*/
        contadorCL = 0;
        contadorCLE = 0;
        contador61 = 0;

    }

    public void frame() {

        jFrame1.setTitle("Cargando");
        jFrame1.setLocation(450, 250);
        jFrame1.setSize(200, 150);
        jFrame1.setResizable(false);
        jFrame1.setLocationRelativeTo(null);

        jFrame1.toFront();
        jFrame1.setVisible(true);
    }

    public static boolean isNumeric(String cadena) {

        boolean resultado;

        try {
            Integer.parseInt(cadena);
            resultado = true;
        } catch (NumberFormatException excepcion) {
            resultado = false;
        }

        return resultado;
    }

    public void extraer(File directorio, String rutaCarpeta, String[] archivos, int contador, String[] verbal, String[] TipoArchivos) {

        if (!directorio.exists()) {
            if (directorio.mkdirs()) {
                for (int i = 0; i < archivos.length; i++) {
                    for (int a = 0; a < contador; a++) {

                        if (archivos[i].contains(TipoArchivos[a])) {

                            try {
                                // System.out.println(archivos[i]+": ");
                                String Fpdf = "";
                                if (verbal[a].contains("SI")) {
                                    //System.out.print("VERBAL\n");
                                    Fpdf = VERBAL;
                                } else {
                                    //  System.out.print("NOVERBAL\n");
                                    Fpdf = NOVERBAL;
                                }
                                Path origenPath = FileSystems.getDefault().getPath(archivos[i]);
                                SeekableByteChannel orgFileChannel = Files.newByteChannel(origenPath, StandardOpenOption.WRITE);
                                orgFileChannel.close();
                                //System.out.println("Origen: " + origenPath.getFileName());
                                Path destinoPath = FileSystems.getDefault().getPath(directorio.getAbsolutePath() + "\\" + TipoArchivos[a] + Fpdf + ".pdf");
                                //System.out.println("Destino: " + destinoPath.getFileName());
                                /*SeekableByteChannel destFileChannel = Files.newByteChannel(destinoPath);
                                 destFileChannel.close();*/
                                try {
                                    Files.copy(origenPath, destinoPath, StandardCopyOption.REPLACE_EXISTING);
                                    //  System.out.println("COPIANDO...");
                                } catch (IOException e) {
                                    System.err.println(e);
                                }

                            } catch (IOException ex) {
                                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }

                    }

                }

            } else {
                JOptionPane.showMessageDialog(null, "Error al crear el directorio ");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonEXCEL;
    private javax.swing.JButton jButtonEXTRAER;
    private javax.swing.JButton jButtonPDF;
    private javax.swing.JCheckBox jCheckBoxSeguimiento;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonY;
    private javax.swing.JRadioButton jRadioButtonZ;
    private javax.swing.JTextField jTextFieldCluster;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
    }
}
